<%= render(:partial => "download", :formats => [:css]) %>

<div class="container" id="content">
<div class="soo_download_#{@project}_#{@package}">
   <% if @data.blank? %>
   <h1 class="my-5"><%= _("No data for %s / %s") % [ @project, @package] %></h1>
   <% else %>
   <% unless @flavors.blank? %>
     <h1 class="font-weight-normal">
       <%= _("<b>#{@package}</b> from <b>#{project_url(@project)}</b> project") %></h1>
   <h2 class="my-4"><%= _("Select Your Operating System") %></h2>
   <div class="row py-3">
      <% @flavors.each do |flavor| %>
      <button class="col btn btn-link btn-pointer align-items-center p-0" id="<%= flavor %>_button" data-toggle="collapse" data-target="#<%= flavor %>" aria-controls="<%= flavor %>" aria-expanded="<%= @flavors.size == 1 %>">
         <img src="<%= image_path('download/' + flavor.downcase + '.png') %>" alt="<%= flavor %>" />
         <h6><%= flavor %></h6>
      </button>
      <%end%>
   </div>
   <div id="accordion">
      <% @flavors.each do |flavor| %>
      <div class="card border-0">
         <div id="<%= flavor %>" class="collapse<%= ' show' if @flavors.size == 1 %>" aria-labelledby="heading<%= flavor %>" data-parent="#accordion">
            <div class="card-body p-3">
               <div class="row w-100">
                  <% @data.select {|k,v| v.has_key?(:ymp) && v[:flavor] == flavor}.sort.reverse.each do |k,v|%>
                  <div class="text-center col">
                     <a href="<%= v[:ymp] %>"><button class="mb-3 mr-3 w-100 btn btn-primary">
                     <%= icon "download" %>
                     <span><%= k.gsub('_', '&nbsp;').html_safe %></span>
                     </button></a>
                  </div>
                  <% end %>
               </div>
               <div>
                  <a data-toggle="collapse" href="#manual<%= flavor %>" role="button" aria-expanded="false" aria-controls="manual<%= flavor %>">
                  <h4 class="my-3"><%= _("Add repository and install manually") %></h4>
                  </a>
                  <div class="collapse" id="manual<%= flavor %>" aria-labelledby="manual<%= flavor %>">
                  <% @data.select {|k,v| v.has_key?(:repo) && !k.nil? && v[:flavor] == flavor}.sort.reverse.each do |k,v| %>
                  <% secure_apt_url = ['Debian', 'Raspbian'].include?(v[:flavor]) ? "https://wiki.debian.org/SecureApt" : "https://help.ubuntu.com/community/SecureApt" %>
                  <% if v[:flavor] == "Arch" %>
                  <% repo_name = @project.gsub(":", "_") + "_" + k %>
                  <h5><%= _("For <strong>Arch Linux</strong>, edit /etc/pacman.conf and add the following (note that the order of repositories in pacman.conf is important, since pacman always downloads the first found package):") %></h5>
                  <pre><%= "[#{repo_name}]" %>
Server = <%= v[:repo].gsub(/(\w):(\w)/, '\1:/\2') %>$arch
</pre>
                  <h5><%= _("Then run the following as <strong>root</strong>") %></h5>
                  <pre>
key=$(curl -fsSL <%= "#{v[:repo]}$(uname -m)/#{repo_name}.key" %>)
fingerprint=$(gpg --quiet --with-colons --import-options show-only --import --fingerprint &lt;&lt;&lt; "${key}" | awk -F: '$1 == "fpr" { print $10 }')

pacman-key --init
pacman-key --add - &lt;&lt;&lt; "${key}"
pacman-key --lsign-key "${fingerprint}"

pacman -Sy <%= repo_name %>/<%= @package %></pre>
                  <% elsif ['Debian', 'Raspbian', 'Ubuntu'].include?(v[:flavor]) %>
                  <h5><%= (_("For <strong>%s</strong> run the following:") % k.gsub('_', '&nbsp;').html_safe).html_safe %></h5>
                  <h6><%= (_("Keep in mind that the owner of the key may distribute updates, packages and repositories that your system will trust (<a href=\"%s\">more information</a>).") % secure_apt_url).html_safe %></h6>
                  <pre><%=
                     package_names = v.fetch(:package, {}).keys.collect { |name| name.slice(0, name.index('_')) }.sort.uniq
                     install_cmds = package_names.collect { |name| "sudo apt install #{name}" }.join("\n")
                     # don't use apt-add-repository wrapper for Ubuntu for now, because it adds source repo which we don't provide
                     #        "apt-add-repository deb #{v[:repo]} /\napt-get update\napt-get install #{@package}"
                     "echo 'deb #{v[:repo].gsub(/(\w):(\w)/, '\1:/\2').gsub(/^https/, 'http')} /' | sudo tee /etc/apt/sources.list.d/#{@project}.list\ncurl -fsSL #{v[:repo]}Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/#{@project.gsub(':', '_')}.gpg > /dev/null\nsudo apt update\n#{install_cmds}"
                     %></pre>
                  <% else %>
                  <h5><%= (_("For <strong>%s</strong> run the following as <strong>root</strong>:") % k.gsub('_', '&nbsp;').html_safe).html_safe %></h5>
                  <pre><%=
                     case v[:flavor]
                     when 'openSUSE', 'SLE'
                         "zypper addrepo #{v[:repo]}#{@project}.repo\nzypper refresh\nzypper install #{@package}"
                     when 'Fedora'
                       version = k.split("_").last
                       if version == "Rawhide" or Integer(version) >= 22
                         "dnf config-manager --add-repo #{v[:repo]}#{@project}.repo\ndnf install #{@package}"
                       else
                         "cd /etc/yum.repos.d/\nwget #{v[:repo]}#{@project}.repo\nyum install #{@package}"
                       end
                     when 'CentOS', 'RHEL', 'SL'
                       "cd /etc/yum.repos.d/\nwget #{v[:repo]}#{@project}.repo\nyum install #{@package}"
                     when 'Univention'
                       "echo 'deb #{v[:repo].gsub(/(\w):(\w)/, '\1:/\2').gsub(/^https/, 'http')} /' > /etc/apt/sources.list.d/#{@project}.list\nwget -nv #{v[:repo]}Release.key -O Release.key\napt-key add - < Release.key\napt-get update\napt-get install #{@package}"
                     when 'Mageia', 'Mandriva'
                       version = k.split("_").last
                       if version == "Cauldron" or Integer(version) >= 6
                         "dnf config-manager --add-repo #{v[:repo]}#{@project}.repo\ndnf install #{@package}"
                       else
                         "urpmi.addmedia #{@project} #{v[:repo]}\nurpmi.update -a\nurpmi #{@package}"
                       end
                     else
                       '?'
                     end
                     %></pre>
                  <% end %>
                  <% end %>
                  </div>
               </div>
               <% if not @package.nil? %>
               <a data-toggle="collapse" href="#direct<%= flavor %>" role="button" aria-expanded="false" aria-controls="direct<%= flavor %>">
                  <h4 class="my-3"><%= _("Grab binary packages directly") %></h4>
                  </a>
                  <div class="collapse" id="direct<%= flavor %>" aria-labelledby="direct<%= flavor %>">
               <div class="w-100 row">
                  <% @data.select {|k,v| v.has_key?(:package) && !k.nil? && v[:flavor] == flavor}.sort.reverse.each do |k,v| %>
                  <div class="text-center col">
                     <p><%= (_("Packages for %s:") % [("<strong>" + k.gsub('_', '&nbsp;') + "</strong>").html_safe]).html_safe %></p>
                     <% v[:package].sort.each do |k,v| %>
                     <a href="<%= v %>"><button class="mb-3 mr-3 w-100 btn btn-primary">
                     <%= icon "download" %>
                     <span><%= k %></span>
                     </button></a>
                     <% end %>
                  </div>

                  <% end %>
                  </div>
               </div>
               <% end %>
            </div>
         </div>
      </div>
      <% end %>
   </div>
</div>
<% else %>
<p><%= _("No downloads found for %s in project %s") % [ @package, @project] %>.</p>
<% end %>
<% end %>
</div>
</div>
