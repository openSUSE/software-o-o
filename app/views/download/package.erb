<% if @data.blank? %>
<p><%= _("No data for %s / %s") % [ @project, @package.nil? ? @pattern : @package] %></p>
<% else %>

<script type="text/javascript">
  var hidetext = '<%= _("(hide)") %>';
  var showtext = '<%= _("(show)") %>';
  $(function(){
    $('.soo_button').click(function(){
      $('.soo_line').show();
      $('.soo_button').removeClass('soo_button_chosen');
      $(this).addClass('soo_button_chosen');
      $('.soo_distro').hide();
      var distro = $(this).attr('id').replace('soo_button_','');
      $('.soo_distro_' + distro).show();
      if (distro == 'openSUSE' || distro == 'SLE') {
        $('#soo_ymp').show();
        $('#soo_section_ymp').show();  $('#soo_section_toggle_ymp span').text(hidetext);
        $('#soo_section_repo').hide(); $('#soo_section_toggle_repo span').text(showtext);
        $('#soo_section_pkg').hide();  $('#soo_section_toggle_pkg span').text(showtext);
      } else {
        $('#soo_ymp').hide();
        $('#soo_section_ymp').hide();  $('#soo_section_toggle_ymp span').text(showtext);
        $('#soo_section_repo').show(); $('#soo_section_toggle_repo span').text(hidetext);
        $('#soo_section_pkg').hide();  $('#soo_section_toggle_pkg span').text(showtext);
      }
    });

    $('.soo_line').click(function(){
      $('#' + $(this).attr('id').replace('toggle_', '')).toggle();
      $(this).children('span').text($(this).children('span').text() == hidetext ? showtext : hidetext);
    });

    // try to detect distro via user agent
    if (navigator.userAgent.indexOf('CentOS') > 0 ) $('#soo_button_CentOS').click();
    if (navigator.userAgent.indexOf('Debian') > 0 ) $('#soo_button_Debian').click();
    if (navigator.userAgent.indexOf('Fedora') > 0 ) $('#soo_button_Fedora').click();
    if (navigator.userAgent.indexOf('Mandriva') > 0 ) $('#soo_button_Mandriva').click();
    if (navigator.userAgent.indexOf('Mageia') > 0 ) $('#soo_button_Mageia').click();
    if (navigator.userAgent.indexOf('Red Hat') > 0 ) $('#soo_button_RHEL').click();
    if (navigator.userAgent.indexOf('Scientific') > 0 ) $('#soo_button_SL').click();
    if (navigator.userAgent.indexOf('SUSE') > 0 ) $('#soo_button_openSUSE').click();
    if (navigator.userAgent.indexOf('Ubuntu') > 0 ) $('#soo_button_Ubuntu').click();
    if (navigator.userAgent.indexOf('Univention') > 0 ) $('#soo_button_Univention').click();
  });
</script>

<%
def gradient(top, mid, btm)
  "  background: #{mid};\n" +
    "  background: -webkit-gradient(linear, left top, left bottom, from(#{top}), to(#{btm}));\n" +
    "  background: -moz-linear-gradient(top,  #{top},  #{btm});\n" +
    "  filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#{top}', endColorstr='#{btm}');"
end
%>

<%= render(:partial => "download", :formats => [:css]) %>

<% unless @flavors.blank? %>
  <div class="soo_box">
    <p class="soo_line soo_line_visible"><%= _("Select Your Operating System") %></p>
    <div class="soo_flavour_line">
      <% @flavors.each do |flavor| %>
        <div class="soo_button" id="soo_button_<%= flavor %>"><img src="<%= image_path('download/' + flavor.downcase + '.png') %>" alt="<%= flavor %>" /><p><%= flavor %></p></div>
      <% end %>
    </div>
  </div>
<% else %>
  <p><%= _("No downloads found for %s in project %s") % [ @package.nil? ? @pattern : @package, @project] %>.</p>
<% end %>
  <div style="clear: both" />

<div id="soo_ymp" class="soo_box">
  <p class="soo_line" id="soo_section_toggle_ymp"><%= _("Install using One Click Install") %><span></span></p>
  <div id="soo_section_ymp">
  
    <% @data.select {|k,v| v.has_key?(:ymp)}.sort.reverse.each do |k,v| %>
      <a class="soo_ymplink soo_distro soo_distro_<%= v[:flavor] %> soo_distro_<%= k %>" href="<%= v[:ymp] %>"><%= k.gsub('_', '&nbsp;').html_safe %></a>
    <% end %>
  </div>
</div>

<div id="soo_repo" class="soo_box">
  <p class="soo_line" id="soo_section_toggle_repo"><%= _("Add repository and install manually") %><span></span></p>
  <div id="soo_section_repo">
    <% @data.select {|k,v| v.has_key?(:repo)}.sort.reverse.each do |k,v| %>
      <div class="soo_repoinfo soo_distro soo_distro_<%= v[:flavor] %> soo_distro_<%= k %>">
        <% if v[:flavor] == "Arch" %>
          <% repo_name = @project.gsub(":", "_") + "_" + k %>
          <p><%= _("For <strong>Arch Linux</strong>, edit /etc/pacman.conf and add the following (note that the order of repositories in pacman.conf is important, since pacman always downloads the first found package):") %></p>
          <pre><%= "[#{repo_name}]" %>
SigLevel = Never
Server = <%= v[:repo].gsub(/(\w):(\w)/, '\1:/\2') %>$arch
</pre>
          <p><%= _("Then run the following as <strong>root</strong>") %>
          <pre>pacman -Syu
pacman -S <%= repo_name %>/<%= @package %></pre>
        <% elsif v[:flavor] == "Ubuntu" %>
          <p><%= (_("For <strong>%s</strong> run the following:") % k.gsub('_', '&nbsp;').html_safe).html_safe %></p>
          <pre><%=
          # don't use apt-add-repository wrapper for Ubuntu for now, because it adds source repo which we don't provide
          #        "apt-add-repository deb #{v[:repo]} /\napt-get update\napt-get install #{@package}"
          "sudo sh -c \"echo 'deb #{v[:repo].gsub(/(\w):(\w)/, '\1:/\2')} /' > /etc/apt/sources.list.d/#{@package}.list\"\nsudo apt-get update\nsudo apt-get install #{@package}"
          %></pre>
        <% else %>
          <p><%= (_("For <strong>%s</strong> run the following as <strong>root</strong>:") % k.gsub('_', '&nbsp;').html_safe).html_safe %></p>
          <pre><%=
            case v[:flavor]
            when 'openSUSE', 'SLE'
              if @package.nil?
                "zypper addrepo #{v[:repo]}#{@project}.repo\nzypper refresh\nzypper install -t pattern #{@pattern}"
              else
                "zypper addrepo #{v[:repo]}#{@project}.repo\nzypper refresh\nzypper install #{@package}"
              end
            when 'Fedora'
              version = k.split("_").last
              if version == "Rawhide" or Integer(version) >= 22
                "dnf config-manager --add-repo #{v[:repo]}#{@project}.repo\ndnf install #{@package}"
              else
                "cd /etc/yum.repos.d/\nwget #{v[:repo]}#{@project}.repo\nyum install #{@package}"
              end
            when 'CentOS', 'RHEL', 'SL'
              "cd /etc/yum.repos.d/\nwget #{v[:repo]}#{@project}.repo\nyum install #{@package}"
            when 'Debian', 'Univention'
              "echo 'deb #{v[:repo].gsub(/(\w):(\w)/, '\1:/\2')} /' > /etc/apt/sources.list.d/#{@package}.list \napt-get update\napt-get install #{@package}"
            when 'Mageia', 'Mandriva'
              version = k.split("_").last
              if version == "Cauldron" or Integer(version) >= 6
                "dnf config-manager --add-repo #{v[:repo]}#{@project}.repo\ndnf install #{@package}"
              else
                "urpmi.addmedia #{@project} #{v[:repo]}\nurpmi.update -a\nurpmi #{@package}"
              end
            else
              '?'
            end
          %></pre>
        <% end %>

        <% if ['Debian', 'Ubuntu', 'Univention'].include? v[:flavor] %>
          <% info_url = v[:flavor] == "Debian" ? "https://wiki.debian.org/SecureApt" : "https://help.ubuntu.com/community/SecureApt" %>
          <p><%= (_("You can add the repository key to apt. Keep in mind that the owner of the key may distribute updates, packages and repositories that your system will trust (<a href=\"%s\">more information</a>). To add the key, run:") % info_url).html_safe %></p>
         <pre>wget -nv <%= v[:repo] %>Release.key -O Release.key
<%= "sudo " if v[:flavor] == "Ubuntu" %>apt-key add - < Release.key
<%= "sudo " if v[:flavor] == "Ubuntu" %>apt-get update</pre>
        <% end -%>
      </div>
    <% end %>
  </div>
</div>

<% if not @package.nil? %>
<div id="soo_pkg" class="soo_box">
  <p class="soo_line" id="soo_section_toggle_pkg"><%= _("Grab binary packages directly") %><span></span></p>
  <div id="soo_section_pkg">
    <table>
      <% @data.select {|k,v| v.has_key?(:package)}.sort.reverse.each do |k,v| %>
        <tr class="soo_pkginfo soo_distro soo_distro_<%= v[:flavor] %> soo_distro_<%= k %>">
          <td><%= (_("Packages for %s:") % [("<strong>" + k.gsub('_', '&nbsp;') + "</strong>").html_safe]).html_safe %></td>
          <td><ul>
            <% v[:package].sort.each do |k,v| %>
              <li><a href="<%= v %>"><%= k %></a></li>
            <% end %>
          </ul></td>
        </tr>
      <% end %>
    </table>
  </div>
</div>
<% end %>

<% end %>
